---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.fastapi.image.container_port  }}"
    spec:
      containers:
        - name: app-container
          imagePullPolicy: Always
          image: "{{ .Values.fastapi.image.repository }}:{{ .Values.fastapi.image.tag }}"
          ports:
            - containerPort: {{ .Values.fastapi.image.container_port  }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      db: mongo
  template:
    metadata:
      labels:
        db: mongo
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "27017"
    spec:
      containers:
      - name: mongo-container
        image: "{{ .Values.mongo.image.image_name }}"
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "{{ .Values.mongo.cred.username }}"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "{{ .Values.mongo.cred.password }}"
        volumeMounts:
            - name: mongo-data
              mountPath: /data/db
        resources:
            requests:
              memory: 512Mi
              cpu: "500m"
            limits:
              memory: 2Gi
              cpu: 2
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-pvc
---